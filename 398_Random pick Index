398. Random pick Index
int[] nums = new int[] {1,2,3,3,3};
Solution solution = new Solution(nums);
// pick(3) should return either index 2, 3, or 4 randomly. Each index should have equal probability of returning.
solution.pick(3);
// pick(1) should return 0. Since in the array only nums[0] is equal to 1.
solution.pick(1);

//nextInt(1) 1这轮选中概率是1， nextInt(2)第二个选中概率1/2，
nextInt(3)3这轮概率为1/3， 所以2总选中概率1/2 * 2/3,1选中概率 
1/2 * 2/3 所以均是1/3。random.nextInt(0,n)等概率选0~n-1
    private int[] nums;
    private Random random;
    
    public Solution(int[] nums) {
        this.nums = nums;
        random = new Random();
    }
    
    public int pick(int target) {
        int index = -1;
        int count = 0;
        for (int i = 0; i < nums.length; i++){
            if (nums[i] == target && random.nextInt(++count) == 0){//这句话意思是从0~++count-1，选中0的概率
                index = i;
            }
        }
        return index;
    }
